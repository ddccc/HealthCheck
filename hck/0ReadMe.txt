c:/tomcat4/webapps/hck/0ReadMe.txt
Thu Dec 10 19:21:31 2020

Likely the most tricky part in this system is the ability to respond
in 'real time' by a user/patient to a chat invitation by a member in
the call center on the page generated by cc/KCallPerson.

It starts by clicking on the invite link of a logged-in user - in the
table of users on that page of a call-center member (physician/ expert
nurse/ ...).

This invokes servlet/cc.KInvite with the parameter 'client'.
It changes the client session with, among which, 'state' ->
'invited'.

This causes a popup window to be created due to an atypical 'tric' of
the user's window that is active when a diagnosis process has started.
Such a page has loaded the file kangel.js, which resides in the root
where the html files are.  This causes the page to have an image of
a pixel sized gif that is refreshed every ten seconds. 
Writing the first pixel involves obtaining it from:
	servlet/patient.KClient 
and defining the events in the image: 
        onLoad='beatSuccess()' onError='beatError()'
The KClient call will normally produce a pixel which triggers the
execution of beatSuccess().  This schedules the doBeat() function to
operate 10 seconds later.  If KClient sees that an invitation is
pending it will produce a reply that causes an error and the
beatError() function is triggered, which executes first doContact()
followed by doBeat() as above.  
The doContact() function generates a popup through: 
         servlet/cc.KChatInvitation
Remains the doBeat() function that gets executed either way.
It attempts similarly to refresh the pixel image by obtaining a reply
from:
	servlet/patient.KClient 
And the loop continues.

The generation of the popup assumes that the browser accepts them.  A
better solution is to use the insertion of an iframe in the current
document that contains the invitation.  That iframe should me smart
enough to self destruct through a time out or when the user makes a
choice.

Some story when two chat-session windows are generated. 
